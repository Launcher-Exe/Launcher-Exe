--Made By (SA)
do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16)local v17=0;local v18;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;while true do if (v17==1) then function v20(v30,v31,v32)if v32 then local v62=0 -0;local v63;while true do if (v62==((2476 -(956 + 602)) -(72 + 846))) then v63=(v30/(((1154 -(172 + 973)) -7)^(v31-1)))%((178 -(162 + 14))^(((v32-1) -(v31-(1326 -(176 + (1820 -671))))) + 1 + (0 -0)));return v63-(v63%(1 + 0));end end else local v64=(1813 -(777 + 1034))^(v31-(1 -0));return (((v30%(v64 + v64))>=v64) and (2 -1)) or ((2907 -938) -(300 + 1669));end end v21=nil;function v21()local v38=v1(v15,v18,v18);v18=v18 + 1;return v38;end v22=nil;v17=2;end if (v17==2) then function v22()local v39=1851 -(714 + 1137);local v40;local v41;while true do if (v39==((5288 -3348) -(27 + 948 + 965))) then v40,v41=v1(v15,v18,v18 + (108 -(75 + 31)));v18=v18 + (734 -(230 + 502));v39=1 + 0;end if (v39==(3 -2)) then return (v41 * (549 -293)) + v40;end end end v23=nil;function v23()local v42,v43,v44,v45=v1(v15,v18,v18 + 3 + 0);v18=v18 + (198 -(108 + 86));return (v45 * (14453802 + 1245220 + 1078194)) + (v44 * (134632 -69096)) + (v43 * (52 + 204)) + v42;end v24=nil;v17=3;end if (v17==4) then v27=nil;function v27(...)return {...},v11("#",...);end v28=nil;function v28()local v46=0 + 0;local v47;local v48;local v49;local v50;local v51;local v52;local v53;while true do if (v46==(679 -(131 + 547))) then local v72=0 + 0;while true do if (v72==(1267 -(915 + 351))) then v46=8 -6;break;end if ((0 -0)==v72) then local v80=0 + 0;while true do if (v80==(192 -(188 + 4))) then v49=nil;v50=nil;v80=1720 -(721 + 998);end if (v80==(1 + 0)) then v72=1 + 0;break;end end end end end if (v46==(1 + 2)) then v53=nil;while true do local v73=0 + 0;local v74;local v75;while true do if (1==v73) then while true do if ((0 + 0)==v74) then v75=0 -0;while true do if (v75==(1 -0)) then if (v47~=(31 -(12 + 18))) then else local v99=0;local v100;local v101;while true do if (v99==(2 -1)) then while true do if (v100~=0) then else v101=1326 -(866 + 460);while true do if (v101==(0 + 0)) then v52=v23();v53={};v101=1 -0;end if (v101==(8 -6)) then v47=740 -(237 + 501);break;end if (v101~=(1 + 0)) then else local v187=0;while true do if ((1572 -(541 + 1030))~=v187) then else v101=2;break;end if ((0 -0)==v187) then for v213=1228 -(636 + 591),v52 do local v214=0;local v215;local v216;local v217;local v218;while true do if (v214==(1801 -(259 + 1542))) then v215=1916 -(1506 + 410);v216=nil;v214=3 -2;end if (v214~=(1 -0)) then else v217=nil;v218=nil;v214=1 + 1;end if (v214==2) then while true do if (v215~=(0 -0)) then else local v258=0 + 0;local v259;while true do if (v258==(1730 -(1726 + 4))) then v259=1530 -(324 + 1206);while true do if (v259==(638 -(533 + 104))) then v215=1 + 0;break;end if (v259==(0 -0)) then local v285=0;while true do if (v285~=(845 -(57 + 787))) then else v259=1 + 0;break;end if (v285~=(0 + 0)) then else v216=1867 -(1750 + 117);v217=nil;v285=2 -1;end end end end break;end end end if (v215==1) then v218=nil;while true do if (v216==(1 -0)) then if (v217==1) then v218=v21()~=(811 -(35 + 776));elseif (v217==(1571 -(296 + 1273))) then v218=v24();elseif (v217==(1026 -(811 + 212))) then v218=v25();end v53[v213]=v218;break;end if ((0 + 0)~=v216) then else local v265=0 -0;local v266;local v267;while true do if (v265==(0 -0)) then v266=0;v267=nil;v265=3 -2;end if ((1269 -(850 + 418))==v265) then while true do if ((1026 -(62 + 964))==v266) then v267=0;while true do if (v267~=(0 + 0)) then else local v298=52 -(39 + 13);while true do if (v298==(0 + 0)) then v217=v21();v218=nil;v298=2 -1;end if (v298~=(3 -2)) then else v267=2 -1;break;end end end if (v267==(1 -0)) then v216=1 + 0;break;end end break;end end break;end end end end break;end end break;end end end v51[8 -5]=v21();v187=1 + 0;end end end end break;end end break;end if ((0 + 0)~=v99) then else v100=0;v101=nil;v99=1;end end end break;end if (v75==(1483 -(369 + 1114))) then local v98=0 + 0;while true do if (v98==(0 + 0)) then local v102=0 + 0;while true do if (v102~=1) then else v98=1;break;end if (v102~=(1452 -(104 + 1348))) then else if ((5 -3)==v47) then local v103=1039 -(255 + 784);local v104;while true do if (v103~=(0 + 0)) then else v104=0 -0;while true do local v195=1620 -(672 + 948);while true do if (v195==(0 + 0)) then if (v104==(1760 -(1011 + 748))) then local v227=0 + 0;while true do if ((0 -0)==v227) then for v260=1 + 0,v23() do v50[v260]=v23();end return v51;end end end if (v104~=(0 -0)) then else local v228=0;local v229;while true do if (0==v228) then v229=0 + 0;while true do if (v229==(0 -0)) then for v268=604 -(117 + 486),v23() do local v269=0 -0;local v270;local v271;local v272;while true do if (v269==(1 -0)) then v272=nil;while true do if (v270==(2 -1)) then while true do if (v271~=(0 -0)) then else v272=v21();if (v20(v272,1,1)==(0 + 0)) then local v299=0 + 0;local v300;local v301;local v302;local v303;local v304;local v305;while true do if (v299==(1 + 1)) then v304=nil;v305=nil;v299=3;end if (v299==(0 + 0)) then v300=385 -(256 + 129);v301=nil;v299=1 -0;end if ((1749 -(765 + 981))~=v299) then else while true do if (v300==(378 -(237 + 139))) then v305=nil;while true do if (v301==(825 -(515 + 308))) then while true do if (v302==(0 -0)) then local v307=0;while true do if (v307==0) then local v315=0 + 0;while true do if ((2 -1)~=v315) then else v307=585 -(303 + 281);break;end if (v315==(1956 -(163 + 1793))) then local v316=0;while true do if (v316~=(2 -1)) then else v315=2 -1;break;end if (v316~=(0 + 0)) then else v303=v20(v272,2,434 -(266 + 165));v304=v20(v272,4,202 -(147 + 49));v316=1;end end end end end if (v307==(3 -2)) then v302=1 + 0;break;end end end if (v302==(1710 -(815 + 894))) then local v308=1569 -(1028 + 541);local v309;local v310;while true do if ((1080 -(924 + 155))==v308) then while true do if (v309==0) then v310=0 + 0;while true do if (v310==0) then local v319=0;while true do if (v319==0) then local v320=1126 -(1083 + 43);while true do if ((0 -0)~=v320) then else v305={v22(),v22(),nil,nil};if (v303==(0 -0)) then local v321=0;while true do if ((26 -(13 + 13))~=v321) then else v305[3 + 0]=v22();v305[2 + 2]=v22();break;end end elseif (v303==1) then v305[1551 -(293 + 1255)]=v23();elseif (v303==(1431 -(1136 + 293))) then v305[6 -3]=v23() -(2^16);elseif (v303~=(1 + 2)) then else local v326=0 + 0;local v327;while true do if (v326~=(0 + 0)) then else v327=0;while true do if (v327==(0 + 0)) then v305[1 + 2]=v23() -((1 + 1)^(8 + 8));v305[82 -(46 + 32)]=v22();break;end end break;end end end v320=1;end if (v320==(2 -1)) then v319=3 -2;break;end end end if (v319==(1 + 0)) then v310=1;break;end end end if (v310~=(2 -1)) then else v302=2 -0;break;end end break;end end break;end if (v308~=(0 + 0)) then else v309=0 + 0;v310=nil;v308=1 + 0;end end end if ((141 -(38 + 101))~=v302) then else local v311=1238 -(763 + 475);local v312;while true do if (v311~=(1228 -(781 + 447))) then else v312=0;while true do if ((2 -1)==v312) then v302=284 -(92 + 189);break;end if ((103 -(102 + 1))==v312) then if (v20(v304,1,1 -0)==(1 -0)) then v305[2 -0]=v53[v305[1 + 1]];end if (v20(v304,2,2 + 0)~=(4 -3)) then else v305[1158 -(802 + 353)]=v53[v305[3]];end v312=1783 -(1673 + 109);end end break;end end end if (v302==3) then if (v20(v304,1 + 2,3 + 0)==(311 -(81 + 229))) then v305[707 -(692 + 11)]=v53[v305[4]];end v48[v268]=v305;break;end end break;end if ((80 -(78 + 2))==v301) then v302=0;v303=nil;v301=1 + 0;end if (v301==(268 -(102 + 165))) then v304=nil;v305=nil;v301=3 -1;end end break;end if (v300~=0) then else v301=0 + 0;v302=nil;v300=1;end if ((1 + 0)==v300) then local v306=0;while true do if (v306~=(1 -0)) then else v300=2;break;end if (v306==(0 -0)) then v303=nil;v304=nil;v306=1;end end end end break;end if ((1 + 0)~=v299) then else v302=nil;v303=nil;v299=1 + 1;end end end break;end end break;end if (v270==(1956 -(1430 + 526))) then local v296=0 -0;while true do if (v296~=(1852 -(358 + 1494))) then else v271=0 -0;v272=nil;v296=1 + 0;end if (v296==(1 + 0)) then v270=424 -(355 + 68);break;end end end end break;end if (v269==0) then v270=0 + 0;v271=nil;v269=1;end end end for v273=1,v23() do v49[v273-(1 + 0)]=v28();end v229=1 + 0;end if (1~=v229) then else v104=1;break;end end break;end end end break;end end end break;end end end if (v47~=(0 -0)) then else local v105=626 -(532 + 94);local v106;while true do if (v105==(931 -(603 + 328))) then v106=0 + 0;while true do if (v106==(4 -2)) then v47=1 + 0;break;end if (v106==(0 -0)) then v48={};v49={};v106=1 -0;end if (v106==1) then local v199=0 + 0;while true do if (0==v199) then local v230=0 + 0;while true do if (v230==0) then v50={};v51={v48,v49,nil,v50};v230=1 + 0;end if (v230==(2 -1)) then v199=1 + 0;break;end end end if (v199~=(3 -2)) then else v106=2 + 0;break;end end end end break;end end end v102=1;end end end if (v98==(1 + 0)) then v75=2 -1;break;end end end end break;end end break;end if (v73==(0 -0)) then v74=0 -0;v75=nil;v73=1;end end end break;end if (v46~=2) then else v51=nil;v52=nil;v46=3;end if (v46~=0) then else v47=0;v48=nil;v46=1 + 0;end end end v17=5;end if (v17==5) then v29=nil;function v29(v33,v34,v35)local v54=v33[1];local v55=v33[2];local v56=v33[3];return function(...)local v65=0;local v66;local v67;local v68;local v69;local v70;while true do if (v65==2) then v70=nil;function v70()local v81=v54;local v82=Const;local v83=v55;local v84=v56;local v85=v27;local v86={};local v87={};local v88={};for v94=1109 -(744 + 365),v69 do if (((2323 + 1360)>(644 + 877)) and (v94>=v84)) then v86[v94-v84]=v68[v94 + 1 + 0];else v88[v94]=v68[v94 + (809 -(45 + 573 + 190))];end end local v89=(v69-v84) + 1 + (1758 -(372 + 1386));local v90;local v91;while true do local v95=0;while true do if (((2190 -1386)<=(8111 -(1774 + 3393))) and (v95==(1541 -(405 + 1135)))) then if ((4675==(5081 -(170 + 236))) and (v91<=(719 -(276 + 425)))) then if ((v91<=(5 + 3)) or ((6833 -(522 + 1379))==(22132 -17185))) then if ((v91<=(1 + 2)) or ((1530 + 2422)<1978)) then if (((4970 -(1212 + 409))<=3787) and (v91<=(3 -2))) then if ((v91>(0 -0)) or (((19948 -(169 + 701)) -14242)<=(13191 -9466))) then if (((6682 -(286 + 1570))==(12770 -7944)) and (v88[v90[2 + 0]]==v90[3 + 1])) then v66=v66 + (2 -(486 -(309 + 176)));else v66=v90[2 + 1];end elseif ( not v88[v90[2 -0]] or ((1413 + 2154)<(2218 + 1023))) then v66=v66 + 1;else v66=v90[255 -(211 + 41)];end elseif ((3501==(1070 + 2431)) and (v91>(1 + 1))) then local v107=0 -0;local v108;local v109;local v110;local v111;local v112;while true do if (((132 + 1349)<=(3621 -1472)) and ((1 + 0)==v107)) then local v188=0 -0;while true do if ((v188==1) or ((1388 -(181 + 174))>=(197 + 1449))) then v107=2;break;end if (((2283 -(7 + 465))<((30172 -22064) -4135)) and (v188==(802 -(69 + 733)))) then v110=v108 + ((986 + 255) -(1162 + 77));v111={v88[v108](v88[v108 + (2 -1)],v88[v110])};v188=920 -(476 + 443);end end end if (((1266 -984)==(2273 -(1589 + 385 + 17))) and (v107==(81 -(52 + 26)))) then if (v112 or ((5025 -(282 + 747))>(2088 + (2152 -(12 + 11))))) then local v196=0 + 0;local v197;while true do if (((3688 -(460 + 1489))>=(1293 -542)) and (v196==(0 + 0))) then v197=0;while true do if ((v197==(0 + 0)) or (1453>(2673 -((2012 -(1572 + 232)) + 312)))) then v88[v110]=v112;v66=v90[1 + 2];break;end end break;end end else v66=v66 + (1 -0);end break;end if ((0==v107) or ((4044 -(171 + 858))==(27 + 10))) then local v189=0 + 0;while true do if ((v189==1) or ((4156 -2395)<=(774 -(40 + 354)))) then v107=1;break;end if ((v189==(0 -0)) or ((2692 + (2615 -(690 + 138)))<919)) then v108=v90[2 -0];v109=v90[(155 + 22) -(85 + 88)];v189=1 + 0;end end end if ((v107==(1 + 1)) or ((3606 -(391 + (957 -(455 + 214))))<=1161)) then local v190=1960 -(1702 + 185 + 73);while true do if ((v190==(694 -((2046 -(784 + 640)) + 71))) or ((2044 -(883 + 57))>(10045 -6748))) then v107=5 -2;break;end if (((3270 -(1470 + (457 -243)))==(5306 -3720)) and (v190==0)) then for v219=1,v109 do v88[v110 + v219]=v111[v219];end v112=v111[857 -(109 + 40 + 707)];v190=1 -0;end end end end else local v113=(0 -0) -(0 -0);local v114;local v115;local v116;while true do if ((v113==(2 -(3 -2))) or ((192 + 137)>=1375)) then v116=nil;while true do if (((1888 -(573 + 421))<(3587 + 305)) and ((1102 -(993 + 108))==v114)) then v88[v115 + 1]=v116;v88[v115]=v116[v90[(1357 -(676 + 670)) -7]];break;end if ((4986>((1594 -(1233 + 128)) -(80 + (1950 -(138 + 1782))))) and (v114==(0 + 0))) then local v202=0 -0;local v203;while true do if (((0 + 0)==v202) or ((2425 -(798 + 1132))<(59 + 275))) then v203=0 + 0;while true do if (((2175 -(266 + 262))<=(139 + 1454 + 2078)) and (v203==(1 -0))) then v114=1 + 0;break;end if (((5305 -3698)<(4556 -2787)) and (v203==(0 + 0))) then local v253=0 + 0 + 0;while true do if ((v253==(2 -1)) or ((3092 + 1153)==(2228 + 498))) then v203=1930 -(1576 + 353);break;end if (((5770 -(817 + 1017))>((9928 -6514) -1224)) and ((0 -0)==v253)) then v115=v90[1 + 1];v116=v88[v90[3 + 0]];v253=2 -1;end end end end break;end end end end break;end if ((v113==(0 + 0)) or ((1508 + 2198)<(14 + 29 + 549))) then local v191=0 -0;while true do if ((v191==(1972 -(451 + 1520))) or ((894 -571)>=(4185 -(125 + 857)))) then v113=(1 + 0) -0;break;end if ((0==v191) or ((254 + 2871)==(4339 -(65 + 462)))) then v114=0 -0;v115=nil;v191=1 + 0;end end end end end elseif ((v91<=(4 + (251 -(141 + 109)))) or ((2316 -(90 + 797))>=(7680 -(16623 -11673)))) then if ((((37575 -25569) -8762)>(131 + 36)) and (v91>(2 + 2))) then local v117=0 -(0 + 0);local v118;local v119;while true do if ((((17784 -13643) + 554)==(4442 + 253)) and (v117==((2 -1) + 0))) then while true do if (((5522 -(50 + 691))>=(875 + (1639 -(125 + 61)))) and (v118==(0 + 0))) then v119=v90[2 + 0];v88[v119](v12(v88,v119 + 1 + 0,v90[6 -3]));break;end end break;end if ((v117==(872 -(378 + 494))) or ((10237 -5884)<(2069 + 1445))) then v118=963 -(934 + 29);v119=nil;v117=1009 -(529 + 479);end end else local v120=0 + (0 -0);local v121;local v122;local v123;local v124;local v125;while true do if ((((4174 -(88 + 268)) -(189 + 62 + (1388 -(230 + 239))))<=4741) and (v120==(1 -0))) then v123=nil;v124=nil;v120=2 + 0;end if ((((1424 + 765) -(156 + 103 + 1070))==(740 + 120)) and (v120==(0 -0))) then v121=398 -(310 + 88);v122=nil;v120=1;end if ((v120==(2 + 0)) or ((6023 -(1637 + 206))<=(406 -315))) then v125=nil;while true do if ((1355==(2648 -1293)) and (v121==(0 -0))) then local v204=0 -0;while true do if ((v204==((388 -288) -(35 + 59 + 6))) or (4898<=1516)) then v122=0;v123=nil;v204=394 -((590 -201) + 4);end if (((5517 -(1210 + 268 + 481))<(13016 -8990)) and (v204==(1 -0))) then v121=(1858 -(301 + 1554)) -2;break;end end end if (((3235 + 669)>(3418 -(136 + 230))) and (v121==(1972 -(879 + 1091)))) then while true do if ((v122==(2 -1)) or ((5352 -2928)==(3773 -1825))) then local v231=0 -0;local v232;while true do if ((401<=(1522 + 261)) and (v231==0)) then v232=0 + (0 -0);while true do if ((1607>(527 + 1058)) and (v232==(1610 -(60 + 1549)))) then v122=2;break;end if ((v232==(0 + 0)) or ((2194 -(797 + 565))>=(2999 -(94 + 107)))) then local v262=0;while true do if (((15670 -(13560 -(100 + 996)))>(7543 -4453)) and (v262==(1 + 0))) then v232=1356 -(152 + 1203);break;end if ((((6382 -(16 + 4)) -((1339 -834) + 1240))==(7568 -2951)) and (v262==0)) then v125={};v124=v9({},{__index=function(v286,v287)local v291=0 + 0;local v292;local v293;while true do if ((v291==(888 -(687 + 201))) or ((291 + 112)>=(4 + 4771))) then v292=0 -0;v293=nil;v291=1;end if ((2544>=(211 + 245 + 124)) and (v291==(1 + 0))) then while true do if (((0 -0)==v292) or ((685 + 12)==(1759 + 2561))) then v293=v125[v287];return v293[1 + 0][v293[1 + (2 -1)]];end end break;end end end,__newindex=function(v288,v289,v290)local v294=13 -(12 + 1);local v295;while true do if ((v294==(144 -(100 + 44))) or ((495 + 266)>=(1130 + 2741))) then v295=v125[v289];v295[1][v295[1424 -(1011 + 411)]]=v290;break;end end end});v262=(2569 -1447) -(220 + 901);end end end end break;end end end if ((3177<=(5288 -895)) and (v122==(1870 -(426 + (2412 -968))))) then local v233=0 + 0;local v234;while true do if ((v233==(0 + 0)) or ((4066 -(709 + 71))<(2136 -776))) then v234=(0 -0) -0;while true do if (((1130 + 3350)>=(3226 -((2901 -(1119 + 591)) + 701))) and (1==v234)) then v122=14 -((1236 -(112 + 1118)) + 7);break;end if ((v234==(1911 -(731 + 1180))) or (1917<(52 + 492 + 226))) then local v263=0 -0;while true do if (((2635 + (2023 -(411 + 351)))==(14338 -10442)) and (v263==1)) then v234=1 + 0;break;end if ((v263==0) or ((10012 -6221)<=(5860 -3224))) then v123=v83[v90[3 -0]];v124=nil;v263=1 -0;end end end end break;end end end if (((1692 -(50 + 100 + 61 + 25))==(157 + 1299)) and (v122==(1423 -((1859 -(114 + 532)) + 208)))) then for v238=1,v90[9 -5] do local v239=0 + 0;local v240;local v241;while true do if ((v239==(1757 -(1629 + 127))) or ((728 + 668)>(6975 -4952))) then while true do if ((791<=(4055 -1840)) and (v240==(0 -0))) then local v275=0 + 0;while true do if (((2350 -(147 + 153))<=(2298 + 2685)) and (1==v275)) then v240=2 -1;break;end if (((2759 + 1625)>=(2092 -(193 + 671))) and (v275==(0 -0))) then v66=v66 + 1 + 0;v241=v81[v66];v275=3 -2;end end end if ((v240==(706 -(294 + 411))) or ((2611 -((171 -113) + 259))<(1730 -1168))) then if ((v241[1 -0]==(4 + 0 + 19)) or ((1710 + 176)<(737 + 829))) then v125[v238-1]={v88,v241[(5 + 3) -5]};else v125[v238-(922 -((1263 -(260 + 268)) + 186))]={v34,v241[3 + 0]};end v87[ #v87 + (3 -2)]=v125;break;end end break;end if (((754 + 1170)==1924) and (v239==((1946 -(151 + 1795)) -0))) then v240=1270 -(1070 + 200);v241=nil;v239=1394 -(1006 + 387);end end end v88[v90[9 -7]]=v29(v123,v124,v35);break;end end break;end if (((4510 -(137 + 1279))>=(512 -332)) and (v121==1)) then v124=nil;v125=nil;v121=1 + 1;end end break;end end end elseif ((v91<=(3 + 3)) or ((336 -237)>(4368 -2684))) then local v126=0 + 0;local v127;local v128;local v129;local v130;local v131;while true do if (((115 + 194)<=(11598 -6975)) and (v126==(0 + 0))) then v127=0;v128=nil;v126=1538 -(609 + 928);end if ((v126==(1 + 0 + 0)) or (3507<(1800 -((1636 -1294) + 885)))) then v129=nil;v130=nil;v126=2 + 0;end if ((((4385 + 1595) -(472 + (2829 -1839)))>(3636 -(937 + 39))) and ((4 -2)==v126)) then v131=nil;while true do if (((7106 -5360)<(4593 -(16 + 518))) and (v127==(2 + 0))) then while true do if (((688 + 2669)==(2880 + 477)) and (v128==(0 + 0))) then local v236=0;while true do if (((2484 -(1272 + 197))<(2395 -(296 + 416))) and (v236==(0 + 0))) then v129=v90[2];v130={v88[v129](v88[v129 + 1])};v236=1 + 0;end if ((2501<=(4337 -(490 + 283))) and ((1 -0)==v236)) then v128=1870 -(989 + 880);break;end end end if (((2748 + 165)==(3485 -(144 + 428))) and (v128==(2 -1))) then v131=(574 + 6) -(341 + 239);for v242=v129,v90[2 + 1 + 1] do local v243=0 + 0;local v244;while true do if ((v243==(1426 -(734 + 692))) or (3408==(3469 + 897))) then v244=1641 -(9 + 349 + 1283);while true do if ((v244==(0 + 0)) or (113>(2773 -1966))) then v131=v131 + (2 -1);v88[v242]=v130[v131];break;end end break;end end end break;end end break;end if ((v127==0) or (((10927 -(233 + 1566)) -6230)<(1488 + 362))) then local v205=0 -0;while true do if ((637<=(4407 -(161 + 397))) and ((0 + 0)==v205)) then v128=0 + 0 + 0;v129=nil;v205=1 + 0;end if (((6864 -4904)<2610) and (v205==1)) then v127=(5 -3) -1;break;end end end if ((v127==(2 -1)) or ((4840 -2618)<(2239 -(244 + 1193)))) then v130=nil;v131=nil;v127=2;end end break;end end elseif ((v91==(1435 -(246 + 1182))) or ((715 + 976)>1896)) then v88[v90[(1788 -(645 + 1134)) -7]]();else v66=v90[(582 + 608) -(490 + 697)];end elseif ((((10772 -8169) + 656)>=(87 + 386)) and (v91<=(46 -(1419 -(334 + 1052))))) then if (((12223 -7897)>=(321 -222)) and (v91<=(3 + 7))) then if ((v91==(1362 -(1285 + 68))) or ((8143 -5818)<=1211)) then local v132=0 -0;local v133;local v134;local v135;local v136;local v137;while true do if ((v132==(5 -3)) or (3288<=(667 + 207))) then v137=nil;while true do if ((v133==(2 -1)) or ((3281 -(99 + 168))<1285)) then local v206=0 + 0;while true do if ((v206==0) or ((2234 + 1245)<(2583 -(1244 + 405)))) then v136=nil;v137=nil;v206=1 + 0;end if (((1480 -(126 + 88 + 147))<4901) and (v206==((2317 -(263 + 368)) -(450 + 1235)))) then v133=2;break;end end end if ((((7066 -(456 + 755)) -1614)>=((5064 -(1932 + 7)) -(424 + 669 + 8))) and ((0 -0)==v133)) then local v207=0 -0;while true do if ((v207==(0 -0)) or (3943<1335)) then v134=124 -(68 + 56);v135=nil;v207=1 + 0;end if ((v207==(1691 -(1156 + 534))) or ((9590 -7269)<((6044 -3591) -1574))) then v133=3 -2;break;end end end if ((v133==(1834 -(248 + 1584))) or ((8643 -5627)<(3903 -1873))) then while true do if (((1256 + 199)==(3630 -2175)) and (v134==(0 + 0))) then local v237=0 -0;while true do if ((v237==(0 -0)) or ((9633 -6965)<(5206 -3459))) then local v254=149 -(54 + 95);while true do if ((v254==0) or (2334>=(4060 + (509 -(112 + 296))))) then v135=v90[676 -(175 + 499)];v136={v88[v135](v12(v88,v135 + 1 + 0,v67))};v254=1;end if (((4975 -(616 + 27))>((2020 -(985 + 270)) + (3647 -1768))) and (v254==((2 -1) + 0))) then v237=(81 + 223) -(133 + 170);break;end end end if (((3512 -(49 + 353))>((3654 -(1514 + 322)) + 550)) and (v237==(1 -0))) then v134=1 + 0;break;end end end if ((3922>=2851) and (v134==(1 + 0))) then v137=0 -0;for v245=v135,v90[319 -(301 + 14)] do local v246=0 + 0;local v247;while true do if (((1555 -(580 + 975))==v246) or ((6305 -(1407 + 327))>(8040 -3138))) then v247=1759 -(375 + 1384);while true do if ((v247==(334 -(73 + 261))) or ((5049 -(827 + 919))==717)) then v137=v137 + 1 + 0;v88[v245]=v136[v137];break;end end break;end end end break;end end break;end end break;end if (((5529 -(901 + 717))>(1101 + 44)) and (v132==(1335 -(696 + 638)))) then v135=nil;v136=nil;v132=4 -2;end if ((1016==(1685 -(82 + 587))) and ((0 -0)==v132)) then v133=(2580 -1135) -(785 + 660);v134=nil;v132=1 + 0;end end else local v138=0 -0;local v139;local v140;while true do if ((4916>=(3405 -2525)) and (v138==(0 + 0))) then v139=1943 -(1587 + 356);v140=nil;v138=923 -(736 + 186);end if (((386 -(33 + 205))==(321 -173)) and (v138==(2 -1))) then while true do if ((v139==((64 + 523) -(120 + 467))) or ((11187 -7266)<=(211 + (4079 -2933)))) then v140=v90[2];v88[v140]=v88[v140](v12(v88,v140 + 1,v90[1779 -(11 + 1765)]));break;end end break;end end end elseif ((1721>(895 -526)) and (v91<=11)) then local v141=0;local v142;local v143;while true do if ((3298==(1577 + 1721)) and (v141==(3 -2))) then while true do if ((v142==(0 -0)) or ((2692 -(80 + 1021))>((13802 -(859 + 896)) -8779))) then v143=v90[2 -0];v88[v143]=v88[v143](v12(v88,v143 + 1,v67));break;end end break;end if ((v141==((436 + 485) -(38 + 883))) or ((2426 -(1094 + 702))==(2257 -(80 + 123)))) then v142=(2750 -(260 + 764)) -(743 + 983);v143=nil;v141=184 -(50 + 133);end end elseif ((497==497) and (v91>(4 + 8))) then v88[v90[1259 -(625 + 632)]]=v88[v90[3]][v90[3 + 1]];else local v172=0 -0;local v173;local v174;while true do if (((17579 -13561)<=(12267 -8094)) and (v172==(76 -(7 + 69)))) then v173=0;v174=nil;v172=3 -2;end if (((597 + 1475)<(3166 -(162 + 1))) and (v172==1)) then while true do if ((v173==(0 + 0)) or (130>(2800 -(172 + 722)))) then v174=v90[4 -2];do return v12(v88,v174,v174 + v90[9 -6]);end break;end end break;end end end elseif ((v91<=(10 + 5)) or ((1161 + 2302)>=(1555 + 2746))) then if ((v91>(24 -10)) or ((9172 -(8284 -(1902 + 93)))<=(658 + 256))) then local v144=0;local v145;local v146;while true do if ((4639<=(6818 -(1089 + (1814 -(802 + 113))))) and (v144==(1 + 0))) then while true do if ((v145==0) or (948<(41 + 20))) then v146=v90[2 + 0];v88[v146]=v88[v146]();break;end end break;end if ((v144==(0 + (475 -(30 + 445)))) or ((9619 -(2017 + 3188))<(12027 -8113))) then v145=1812 -(1104 + 708);v146=nil;v144=1 -0;end end else v88[v90[4 -2]]=v90[3];end elseif ((3352<(4768 -(529 + 537 + (365 -87)))) and (v91<=(6 + 10))) then local v148=1701 -(1467 + 234);local v149;local v150;local v151;local v152;local v153;while true do if (((2115 -(406 + 895))==(1966 -1152)) and (2==v148)) then v153=nil;while true do if ((v149==(1094 -(809 + 284))) or ((399 + 33)>=((2710 + 2400) -2060))) then local v211=0 + 0;while true do if (((2432 -(866 + 801))<((4531 -(523 + 133)) + 211)) and (v211==(0 + 0))) then v67=(v152 + v150) -(1 + 0);v153=(1708 -(670 + 14)) -(718 + 306);v211=766 -(196 + 569);end if ((v211==(1 + 0)) or ((3091 + 132)>(10628 -5629))) then v149=4 -(469 -(389 + 78));break;end end end if ((v149==(0 + 0)) or ((4425 -(2082 + 400))<(515 -((256 -158) + (1288 -(637 + 549)))))) then v150=v90[2];v151,v152=v85(v88[v150](v88[v150 + (1197 -(583 + 613))]));v149=1;end if (((1041 + 1131)==2172) and ((105 -((266 -(183 + 45)) + 65))==v149)) then for v221=v150,v67 do local v222=755 -(695 + 60);local v223;local v224;while true do if (((5141 -2696)<(1690 + 1829)) and (v222==(0 + 0))) then v223=0 -(0 + 0);v224=nil;v222=1016 -((557 -94) + 552);end if (((10498 -7149)>(4 + 1930)) and ((2 -1)==v222)) then while true do if ((v223==(0 + 0)) or ((5281 -2815)==(9379 -4898))) then v224=0;while true do if ((v224==(50 -(4 + 46))) or (((3712 -(388 + 251)) -(1316 + 501))>(779 + 868))) then v153=v153 + 1;v88[v221]=v151[v153];break;end end break;end end break;end end end break;end end break;end if ((v148==(1 + 0)) or ((3740 + 225)<=(8082 -4373))) then v151=nil;v152=nil;v148=2 + 0 + 0;end if (((525 -((1388 -(836 + 423)) + (2128 -(784 + 948))))==v148) or ((3595 -(683 + 683))>(8200 -5126))) then v149=0 + 0;v150=nil;v148=1883 -(540 + 1342);end end elseif (((2806 -(755 + 700))==(176 + 1175)) and (v91>(1078 -(343 + 718)))) then for v192=v90[3 -1],v90[3] do v88[v192]=nil;end else v88[v90[5 -3]]=v34[v90[3]];end elseif (((1698 + 1018)>((569 + 6353) -4888)) and (v91<=(261 -(38 + 196)))) then if ((v91<=(82 -60)) or ((5279 -2604)>(3447 + 1326))) then if ((v91<=(68 -48)) or ((12306 -8532)==103)) then if ((v91==(41 -22)) or ((853 + (5035 -(653 + 578)))==(1724 + 1707))) then v88[v90[4 -2]]=v90[1345 -(623 + 719)]~=0;else do return;end end elseif ((v91>(63 -(40 + 2))) or ((1711 + 2982)<=(2318 + 1455))) then v88[v90[1 + 1]]={};else v88[v90[2 + (0 -0)]]=v88[v90[1527 -(404 + 1120)]][v88[v90[1 + 3]]];end elseif ((v91<=((1777 -(838 + 934)) + 19)) or ((545 -(33 + 15))>=(5086 -3225))) then if (((1806 -(684 + 113))<=3630) and (v91==(21 + 2))) then v88[v90[(757 -(495 + 261)) + (1637 -(749 + 887))]]=v88[v90[1 + (5 -3)]];else v88[v90[2 + 0]]=v35[v90[3]];end elseif ((v91<=(1775 -(70 + 1680))) or ((5871 -(1199 + 143))<(1557 + 1278))) then v88[v90[2]][v90[(3603 -2518) -(751 + 331)]]=v90[3 + 1];elseif ((v91==(1483 -(638 + 819))) or ((2492 -(760 + 601))>=(2737 -(413 + 25)))) then local v176=931 -(794 + 137);local v177;local v178;local v179;local v180;local v181;local v182;while true do if (((1362 -(189 + 281))==892) and (v176==(3 + 0))) then while true do if (((4552 -(1232 + 56))==(2741 + (2454 -(1077 + 854)))) and (v177==(1 -0))) then local v225=0 + 0;while true do if ((v225==0) or (830>=(4998 -(402 + 124)))) then v180=nil;v181=nil;v225=1593 -(526 + 1066);end if ((v225==(1 + 0)) or ((3714 + (1108 -589))<=(2360 + 442))) then v177=(1 + 4) -3;break;end end end if (((1170 + 36 + 44)<(248 + 2906)) and (v177==(1 + 1))) then v182=nil;while true do if ((1226>=(783 -(22 + 43))) and (v178==1)) then local v249=0 + 0;local v250;while true do if ((v249==(0 -0)) or ((1328 -(236 + 345))>=3609)) then v250=0 + 0;while true do if ((v250==(0 + 0)) or ((3323 -(1256 + 537))<=(1543 -(59 + 68)))) then local v280=0;while true do if ((v280==(0 + 0)) or ((2172 -(1469 + 262))==(3551 + 1322))) then v67=(v181 + v179) -(2 -1);v182=674 -(47 + 627);v280=1944 -(1630 + 313);end if (((12038 -7731)>(2411 + 1413)) and (v280==1)) then v250=3 -2;break;end end end if ((((6087 -3332) -1061)<=(6024 -(1450 + 454))) and (v250==(693 -(669 + 23)))) then v178=6 -4;break;end end break;end end end if ((3838>(36 + 564)) and ((0 + 0)==v178)) then local v251=0 -(198 -(189 + 9));local v252;while true do if ((v251==(0 + 0)) or ((1909 + 935)<(1705 + 102 + 56))) then v252=591 -(250 + 341);while true do if (((1 + 0)==v252) or ((5076 -2148)==2016)) then v178=173 -(9 + 163);break;end if ((v252==(0 + 0)) or (464>=(4635 -(332 + 161)))) then local v281=0;while true do if ((v281==0) or ((1383 -(222 + 303))==(2402 -(874 + 140)))) then v179=v90[2];v180,v181=v85(v88[v179](v12(v88,v179 + 1 + 0 + 0,v90[2 + (764 -(267 + 496))])));v281=460 -(107 + 352);end if (((8 + 396)<1536) and (v281==(1 -0))) then v252=1 + 0;break;end end end end break;end end end if (((1828 -(184 + 982))<=((5542 -(294 + 357)) -((1665 -1108) + 132))) and (v178==(1 + 1))) then for v255=v179,v67 do local v256=1216 -(448 + 768);local v257;while true do if ((v256==0) or ((69 + 321)==2644)) then v257=0 + 0;while true do if ((v257==0) or ((3307 + (1366 -722))<=(7289 -4123))) then v182=v182 + 1;v88[v255]=v180[v182];break;end end break;end end end break;end end break;end if (((5572 -(430 + 94 + 824))>(2049 -(385 + (2601 -(908 + 294))))) and (v177==(0 -0))) then v178=0 -0;v179=nil;v177=1;end end break;end if (((12110 -8170)>((3452 -(427 + 146)) -1839)) and (v176==(0 -0))) then v177=(0 -0) + 0;v178=nil;v176=1585 -(37 + 1547);end if ((v176==(3 -2)) or ((1476 + 2319)<=(2591 + 188 + 114))) then v179=nil;v180=nil;v176=2;end if ((v176==(496 -(142 + 352))) or ((12168 -8540)>(6216 -(552 + 1168)))) then v181=nil;v182=nil;v176=586 -(184 + 399);end end else local v183=0 + 0;local v184;local v185;while true do if (((213 + 3034)>=(557 -373)) and (v183==(1 + 0))) then while true do if ((v184==(0 -0)) or ((3685 -(213 + 142))<=(4187 -1416))) then v185=v90[1564 -(849 + 461 + 252)];v88[v185]=v88[v185](v88[v185 + (294 -(253 + (125 -85)))]);break;end end break;end if (((3635 + 313)>=1566) and (v183==(0 + 0))) then v184=0 -0;v185=nil;v183=1;end end end elseif ((v91<=(18 + 14)) or (4241<=(1309 -(1303 -753)))) then if ((v91<=(29 + 0)) or ((1615 -320)<(2052 -(516 + 244)))) then if ((((4938 -(52 + 93)) -(443 + 741))>(1986 -(875 + (1410 -(249 + 695))))) and (v91==28)) then if ((1895>=(2727 -((513 -(97 + 281)) + 745))) and (v90[1787 -(1018 + 767)]==v88[v90[4 + 0]])) then v66=v66 + 1 + 0;else v66=v90[3 + 0 + 0];end else local v160=0 -0;local v161;local v162;local v163;while true do if ((v160==(1 + 0)) or ((289 -74)>((3609 -2274) + 292))) then v163=nil;while true do if ((776>(1489 -(571 + 237))) and ((748 -(320 + 428))==v161)) then local v212=0;while true do if ((v212==(571 -(340 + 230))) or ((137 + 170)>(2613 -(1032 + 808)))) then v161=1124 -((959 -(45 + 48)) + 171 + 86);break;end if (((6025 -3164)>(466 + 25)) and (v212==0)) then v162=(891 -(36 + 855)) -0;v163=nil;v212=129 -((822 -(649 + 104)) + 59);end end end if (((1307 + 1468)<=((2059 + 4504) -(264 + 240 + (2725 -(83 + 1466))))) and ((419 -(382 + (1689 -(1582 + 71))))==v161)) then while true do if (((0 -0)==v162) or ((241 + 2112)<=(133 + 304))) then v163=v90[464 -(437 + 25)];v88[v163](v88[v163 + 1 + 0]);break;end end break;end end break;end if (((412 + 38)<=(2942 -720)) and (v160==(0 -0))) then v161=0 + 0 + 0;v162=nil;v160=2 -1;end end end elseif ((v91<=(92 -62)) or ((5242 -(1099 + 375))<=(1569 -507))) then v88[v90[1 + 1]]=v29(v83[v90[9 -6]],nil,v35);elseif ((v91>(83 -(771 -(432 + 287)))) or ((2017 -(155 + 84))>=(5535 -1400))) then v88[v90[2]][v90[1 + 2]]=v88[v90[6 -2]];elseif ((v88[v90[1953 -(1558 + 393)]]==v88[v90[5 -1]]) or ((1212 + 3293)>(7859 -3285))) then v66=v66 + (540 -(90 + 449));else v66=v90[3];end elseif ((1598<4405) and (v91<=(20 + 14))) then if ((v91==(5 + 28)) or ((6132 -(750 + 618 + 117))<(3748 -(1048 + 149)))) then local v165=(267 -(51 + 216)) + 0;local v166;local v167;while true do if (((2521 -(250 + 72))>(551 + 955)) and (v165==(3 -2))) then while true do if ((733<(2924 -(52 + (2617 -(1825 + 143))))) and (v166==0)) then v167=v90[1544 -(1038 + 504)];do return v12(v88,v167,v67);end break;end end break;end if (((3796 + 453)<4640) and ((0 + 0)==v165)) then local v194=293 -(75 + 218);while true do if (((943 + 395)==(1156 + 182)) and (v194==(1 + 0))) then v165=626 -(280 + 345);break;end if ((v194==(0 + 0)) or ((450 + (3251 -(14 + 20)))<(2112 + 554))) then v166=0 + 0;v167=nil;v194=2 -1;end end end end else local v168=469 -(361 + 108);local v169;while true do if ((v168==(0 -0)) or ((2763 + 1508)==(544 + 49 + 47))) then v169=v90[107 -(93 + 12)];do return v88[v169](v12(v88,v169 + (63 -(14 + 48)),v90[3]));end break;end end end elseif ((v91<=(668 -(257 + (822 -446)))) or (((2400 + 321) -(44 + (1861 -(940 + 620))))==958)) then v88[v90[1280 -(414 + 864)]]=v88[v90[924 -(262 + 659)]] * v88[v90[2 + 2]];elseif ((v91>(127 -91)) or ((4856 -2864)==(425 + 1482))) then do return v88[v90[2]];end elseif (((3033 + 292)>=1459) and v88[v90[1 + 1]]) then v66=v66 + (4 -3);else v66=v90[5 -2];end v66=v66 + (505 -(26 + 478));break;end if ((v95==(0 -0)) or (4643==(5048 -(399 + 396)))) then v90=v81[v66];v91=v90[1 + 0];v95=1 + 0;end end end end v65=3;end if (v65==3) then A,B=v27(v10(v70));if  not A[1] then local v92=0;local v93;while true do if (v92==0) then v93=v33[4][v66] or "?";error("Script error at ["   .. v93   .. "]:"   .. A[2]);break;end end else return v12(A,2,B);end break;end if (v65==0) then v66=1;v67= -1;v65=1;end if (v65==1) then v68={...};v69=v11("#",...) -1;v65=2;end end end;end return v29(v28(),{},v16)();end if (0==v17) then v18=1;v19=nil;v15=v4(v3(v15,5),"..",function(v36)if (v1(v36,2)==79) then v19=v0(v3(v36,1,1));return "";else local v71=v2(v0(v36,16));if v19 then local v76=0;local v77;while true do if (v76==1) then return v77;end if (v76==0) then v77=v5(v71,v19);v19=nil;v76=1;end end else return v71;end end end);v20=nil;v17=1;end if (v17==3) then function v24()local v57=v23();local v58=v23();return (( -(1 + 1) * v20(v58,50 -18)) + 1) * (((1852 -(1352 + 492)) -6)^(v20(v58,32 -11,31) -(2890 -(343 + 1524)))) * ((((v20(v58,(675 -(25 + 101)) -(202 + 346),20) * ((7 -5)^(54 -22))) + v57)/((4 -2)^(171 -119))) + (1504 -(415 + 1088)));end v25=nil;function v25(v37)local v59=0 + 0;local v60;local v61;while true do if (v59==(1115 -(880 + (1047 -(749 + 65))))) then v61={};for v78=1 -0, #v60 do v61[v78]=v2(v1(v3(v60,v78,v78)));end v59=3;end if (v59==1) then v60=v3(v15,v18,(v18 + v37) -(834 -(503 + 330)));v18=v18 + v37;v59=1187 -(551 + (2266 -(1036 + 596)));end if (v59==(9 -6)) then return v6(v61);end if (v59==(1990 -(1063 + 927))) then v60=nil;if  not v37 then v37=v23();if (v37==0) then return "";end end v59=414 -(238 + 175);end end end v26=v23;v17=4;end end end vv8());end
--Ez
